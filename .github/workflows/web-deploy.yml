name: Deploy Web Project

on:
  repository_dispatch:
    types: [trigger-deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.client_payload.repo_name }}
          ref: ${{ github.event.client_payload.branch }}

      - name: Install Dependencies
        working-directory: .
        run: npm install
        
      - name: Ensure Config Directory Exists
        run: mkdir -p ./src/config

      - name: Set Config Json File
        id: create-json 
        uses: jsdaniell/create-json@v1.2.2 
        with:
          name: "config.json" 
          json: ${{ github.event.client_payload.config_secret }}
          dir: './src/config' 

      - name: Build Project
        working-directory: .
        run: npm run build

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Create Destination Directory If Not Exists
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "sudo mkdir -p ${{ secrets.DOCKER_VOLUMES_PATH }}/$(echo '${{ github.event.client_payload.destination_directory }}')"

      - name: Deploy Files to Server
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
          --rsync-path="sudo rsync" \
          ./${{ github.event.client_payload.source_directory }}/ \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DOCKER_VOLUMES_PATH }}/$(echo '${{ github.event.client_payload.destination_directory }}')
      
      - name: Nginx Reload
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "docker compose -f /home/${{ secrets.EC2_USER }}/docker/nginx-docker-compose.yml restart nginx"
